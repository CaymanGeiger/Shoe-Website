{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { BrandsArrowToggleButton, StoresArrowToggleButton, PricesArrowToggleButton, ColorsArrowToggleButton, CategoriesArrowToggleButton, NamesArrowToggleButton } from './filter';\nimport { Link } from \"react-router-dom\";\n\nfunction ShoeList() {//     const [shoes, setShoes] = useState([]);\n  //     const [bins, setBins] = useState([]);\n  //     const [bin, setBin] = useState(\"\");\n  //     // const [filteredList, setFilteredList] = useState([]);\n  //     const [nameIsUp, setNameIsUp] = useState(false);\n  //     const [brandIsUp, setBrandIsUp] = useState(false);\n  //     const [priceIsUp, setPriceIsUp] = useState(false);\n  //     async function loadShoes() {\n  //         const response = await fetch('http://localhost:8080/api/shoes/');\n  //         const data = await response.json();\n  //         setShoes(data.shoes);\n  //     }\n  //     async function loadBins(){\n  //         const response = await fetch (\"http://localhost:8100/api/bins/\");\n  //         const data = await response.json();\n  //         setBins(data.bins)\n  //     }\n  //     useEffect(() => {\n  //         loadShoes();\n  //         loadBins();\n  //     }, []);\n  //     async function filterShoes() {\n  //         if (bin !== \"\"){\n  //             const pk = bin\n  //             const response = await fetch(`http://localhost:8080/api/bin/${pk}/shoes/`);\n  //             const data = await response.json();\n  //             setShoes(data.shoes);\n  //         }\n  //     }\n  //     function handleBinChange(e){\n  //             setBin(e.target.value)\n  //     }\n  //     useEffect(() => {\n  //         filterShoes();\n  //     }, [bin]);\n  //     function handleAllShoesClick(){\n  //         loadShoes();\n  //     }\n  //     async function handleOnDelete(e) {\n  //         const pk = e.target.id\n  //         const request = await fetch (`http://localhost:8080/api/shoe/${pk}/`, {\n  //             method: \"DELETE\"\n  //         });\n  //         const resp = await request.json()\n  //         if (resp.deleted){\n  //             alert(\"Was Deleted\")\n  //             loadShoes()\n  //         } else {\n  //             alert(\"Not Deleted!\")\n  //         }\n  //     }\n  //     // function onToggleNameDirection(){\n  //     // }\n  //     // function onToggleBrandDirection(){\n  //     // }\n  //     const sortedList = shoes.sort((shoeA, shoeB) => {\n  //         if (nameIsUp === true) {\n  //             return shoeA.name.localeCompare(shoeB.name);\n  //         } else if (nameIsUp === false){\n  //             return shoeB.name.localeCompare(shoeA.name);}\n  //     });\n  // return (\n  //     <div className=\"mainDiv mt-3\">\n  //     <div style={{display: \"flex\", justifyContent: \"center\" }}>\n  //     <select className=\"btn-secondary\" style={{width: \"20vw\", backgroundColor: \"black\"}} value={bin} onChange={handleBinChange} required name=\"bin\" id=\"bin\">\n  //         <option style={{textAlign: \"center\"}} value=\"up\">Choose a store</option>\n  //         {bins.map(bin => {\n  //             return (\n  //             <option key={bin.id} value={bin.id} >\n  //             {bin.closet_name}\n  //             </option>\n  //             );\n  //         })}\n  //     </select>\n  //     </div>\n  //     <div className='mt-3'>\n  //     <table className=\"table table-hover listTable\">\n  //         <thead className='mt-5'>\n  //         <tr className=\"listTr\">\n  //             <th className=''>Names <NamesArrowToggleButton onToggleNameDirection={setNameIsUp}/></th>\n  //             <th>Brands <BrandsArrowToggleButton onToggleBrandDirection={setBrandIsUp}/></th>\n  //             <th>Categories<CategoriesArrowToggleButton/></th>\n  //             <th>Prices<PricesArrowToggleButton onTogglePriceDirection={setPriceIsUp}/></th>\n  //             <th>Sizes<ColorsArrowToggleButton/></th>\n  //             <th>Colors<ColorsArrowToggleButton/></th>\n  //             <th>Stores<StoresArrowToggleButton/></th>\n  //             <th>Sku's<StoresArrowToggleButton/></th>\n  //             <th>Remove</th>\n  //         </tr>\n  //         </thead>\n  //         <tbody>\n  //         {sortedList.map(shoe => {\n  //             return (\n  //             <tr key={shoe.id}>\n  //                 <td><Link to={`/shoes/${shoe.id}`}>{ shoe.name }</Link></td>\n  //                 <td>{ shoe.brand }</td>\n  //                 <td>{ shoe.category }</td>\n  //                 <td> ${ shoe.price }</td>\n  //                 <td>{ shoe.size }</td>\n  //                 <td>{ shoe.color }</td>\n  //                 <td>{ shoe.bin.name }</td>\n  //                 <td>{ shoe.sku }</td>\n  //                 <td><button onClick={handleOnDelete} id={shoe.id}className=\"btn btn-danger btn-sm\">Delete</button></td>\n  //             </tr>\n  //             );\n  //         })}\n  //         </tbody>\n  //     </table>\n  // </div>\n  // <div style={{display: \"flex\", justifyContent: \"center\"}}>\n  // <button className=\"btn-secondary\" style={{width: \"15vw\", fontSize: \"1em\", overflow: \"hidden\", backgroundColor: \"black\"}}onClick={handleAllShoesClick}>Refresh</button>\n  // </div>\n  // </div>\n  // );\n}\n\n_c = ShoeList;\nexport default ShoeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoeList\");","map":{"version":3,"names":["useState","useEffect","BrandsArrowToggleButton","StoresArrowToggleButton","PricesArrowToggleButton","ColorsArrowToggleButton","CategoriesArrowToggleButton","NamesArrowToggleButton","Link","ShoeList"],"sources":["/app/src/Shoes/ShoeList.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport { BrandsArrowToggleButton, StoresArrowToggleButton, PricesArrowToggleButton, ColorsArrowToggleButton, CategoriesArrowToggleButton, NamesArrowToggleButton } from './filter';\nimport { Link } from \"react-router-dom\"\n\n\nfunction ShoeList() {\n//     const [shoes, setShoes] = useState([]);\n//     const [bins, setBins] = useState([]);\n//     const [bin, setBin] = useState(\"\");\n//     // const [filteredList, setFilteredList] = useState([]);\n//     const [nameIsUp, setNameIsUp] = useState(false);\n//     const [brandIsUp, setBrandIsUp] = useState(false);\n//     const [priceIsUp, setPriceIsUp] = useState(false);\n\n//     async function loadShoes() {\n//         const response = await fetch('http://localhost:8080/api/shoes/');\n//         const data = await response.json();\n//         setShoes(data.shoes);\n//     }\n\n\n//     async function loadBins(){\n//         const response = await fetch (\"http://localhost:8100/api/bins/\");\n//         const data = await response.json();\n//         setBins(data.bins)\n//     }\n//     useEffect(() => {\n//         loadShoes();\n//         loadBins();\n//     }, []);\n\n\n//     async function filterShoes() {\n//         if (bin !== \"\"){\n//             const pk = bin\n//             const response = await fetch(`http://localhost:8080/api/bin/${pk}/shoes/`);\n//             const data = await response.json();\n//             setShoes(data.shoes);\n//         }\n//     }\n\n\n//     function handleBinChange(e){\n//             setBin(e.target.value)\n//     }\n//     useEffect(() => {\n//         filterShoes();\n//     }, [bin]);\n\n\n//     function handleAllShoesClick(){\n//         loadShoes();\n//     }\n\n\n//     async function handleOnDelete(e) {\n//         const pk = e.target.id\n//         const request = await fetch (`http://localhost:8080/api/shoe/${pk}/`, {\n//             method: \"DELETE\"\n//         });\n//         const resp = await request.json()\n//         if (resp.deleted){\n//             alert(\"Was Deleted\")\n//             loadShoes()\n//         } else {\n//             alert(\"Not Deleted!\")\n//         }\n//     }\n\n\n//     // function onToggleNameDirection(){\n\n//     // }\n\n//     // function onToggleBrandDirection(){\n\n//     // }\n\n//     const sortedList = shoes.sort((shoeA, shoeB) => {\n//         if (nameIsUp === true) {\n//             return shoeA.name.localeCompare(shoeB.name);\n//         } else if (nameIsUp === false){\n//             return shoeB.name.localeCompare(shoeA.name);}\n//     });\n\n// return (\n//     <div className=\"mainDiv mt-3\">\n//     <div style={{display: \"flex\", justifyContent: \"center\" }}>\n//     <select className=\"btn-secondary\" style={{width: \"20vw\", backgroundColor: \"black\"}} value={bin} onChange={handleBinChange} required name=\"bin\" id=\"bin\">\n//         <option style={{textAlign: \"center\"}} value=\"up\">Choose a store</option>\n//         {bins.map(bin => {\n//             return (\n//             <option key={bin.id} value={bin.id} >\n//             {bin.closet_name}\n//             </option>\n//             );\n//         })}\n//     </select>\n//     </div>\n//     <div className='mt-3'>\n//     <table className=\"table table-hover listTable\">\n//         <thead className='mt-5'>\n//         <tr className=\"listTr\">\n//             <th className=''>Names <NamesArrowToggleButton onToggleNameDirection={setNameIsUp}/></th>\n//             <th>Brands <BrandsArrowToggleButton onToggleBrandDirection={setBrandIsUp}/></th>\n//             <th>Categories<CategoriesArrowToggleButton/></th>\n//             <th>Prices<PricesArrowToggleButton onTogglePriceDirection={setPriceIsUp}/></th>\n//             <th>Sizes<ColorsArrowToggleButton/></th>\n//             <th>Colors<ColorsArrowToggleButton/></th>\n//             <th>Stores<StoresArrowToggleButton/></th>\n//             <th>Sku's<StoresArrowToggleButton/></th>\n\n//             <th>Remove</th>\n//         </tr>\n//         </thead>\n//         <tbody>\n//         {sortedList.map(shoe => {\n//             return (\n//             <tr key={shoe.id}>\n//                 <td><Link to={`/shoes/${shoe.id}`}>{ shoe.name }</Link></td>\n//                 <td>{ shoe.brand }</td>\n//                 <td>{ shoe.category }</td>\n//                 <td> ${ shoe.price }</td>\n//                 <td>{ shoe.size }</td>\n//                 <td>{ shoe.color }</td>\n//                 <td>{ shoe.bin.name }</td>\n//                 <td>{ shoe.sku }</td>\n//                 <td><button onClick={handleOnDelete} id={shoe.id}className=\"btn btn-danger btn-sm\">Delete</button></td>\n\n//             </tr>\n//             );\n//         })}\n//         </tbody>\n//     </table>\n// </div>\n// <div style={{display: \"flex\", justifyContent: \"center\"}}>\n// <button className=\"btn-secondary\" style={{width: \"15vw\", fontSize: \"1em\", overflow: \"hidden\", backgroundColor: \"black\"}}onClick={handleAllShoesClick}>Refresh</button>\n// </div>\n\n// </div>\n// );\n}\nexport default ShoeList;\n"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,EAA2DC,uBAA3D,EAAoFC,uBAApF,EAA6GC,2BAA7G,EAA0IC,sBAA1I,QAAwK,UAAxK;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,SAASC,QAAT,GAAoB,CACpxIQA,Q;AAyIT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}