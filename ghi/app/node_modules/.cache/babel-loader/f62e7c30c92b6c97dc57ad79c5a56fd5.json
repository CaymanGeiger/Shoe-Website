{"ast":null,"code":"var _jsxFileName = \"/app/src/Accounts/SignInModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext } from 'react'; // Create a context for the modal\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext();\nexport function useModal() {\n  _s();\n\n  return useContext(ModalContext);\n} // This component will wrap around your entire app\n\n_s(useModal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ModalProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false); // Open and close functions\n\n  const openModal = () => setIsModalOpen(true);\n\n  const closeModal = () => setIsModalOpen(false);\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      isModalOpen,\n      openModal,\n      closeModal\n    },\n    children: [children, isModalOpen && /*#__PURE__*/_jsxDEV(YourModalComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ModalProvider, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n\n_c = ModalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","ModalContext","useModal","ModalProvider","children","isModalOpen","setIsModalOpen","openModal","closeModal"],"sources":["/app/src/Accounts/SignInModal.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Create a context for the modal\nconst ModalContext = createContext();\n\nexport function useModal() {\n    return useContext(ModalContext);\n}\n\n// This component will wrap around your entire app\nexport function ModalProvider({ children }) {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    // Open and close functions\n    const openModal = () => setIsModalOpen(true);\n    const closeModal = () => setIsModalOpen(false);\n\n    return (\n        <ModalContext.Provider value={{ isModalOpen, openModal, closeModal }}>\n            {children}\n            {isModalOpen && <YourModalComponent />}\n        </ModalContext.Provider>\n    );\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D,C,CAEA;;;AACA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEA,OAAO,SAASI,QAAT,GAAoB;EAAA;;EACvB,OAAOF,UAAU,CAACC,YAAD,CAAjB;AACH,C,CAED;;GAJgBC,Q;;AAKhB,OAAO,SAASC,aAAT,OAAqC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACxC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C,CADwC,CAGxC;;EACA,MAAMQ,SAAS,GAAG,MAAMD,cAAc,CAAC,IAAD,CAAtC;;EACA,MAAME,UAAU,GAAG,MAAMF,cAAc,CAAC,KAAD,CAAvC;;EAEA,oBACI,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAED,WAAF;MAAeE,SAAf;MAA0BC;IAA1B,CAA9B;IAAA,WACKJ,QADL,EAEKC,WAAW,iBAAI,QAAC,kBAAD;MAAA;MAAA;MAAA;IAAA,QAFpB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;IAbeF,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}