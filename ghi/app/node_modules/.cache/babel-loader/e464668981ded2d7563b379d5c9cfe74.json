{"ast":null,"code":"var _jsxFileName = \"/app/src/Accounts/AccountLogOut.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useAuth } from '../Auth/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useLogout = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    logout\n  } = useAuth();\n  const [csrfToken, setCsrfToken] = useState('');\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await fetch('http://localhost:8070/api/csrf-token/', {\n          method: 'GET',\n          credentials: 'include'\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setCsrfToken(data.csrfToken);\n        } else {\n          console.error('Failed to fetch CSRF token.');\n        }\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n      }\n    };\n\n    fetchCsrfToken();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://localhost:8070/api/account/logout/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        credentials: 'include'\n      });\n\n      if (response.ok) {\n        logout();\n        navigate('/');\n      } else {\n        console.error('Logout failed');\n      }\n    } catch (error) {\n      console.error('An error occurred while trying to log out:', error);\n    }\n  };\n\n  return handleLogout;\n};\n\n_s(useLogout, \"zgXmwuPPaAqUG+WXFbSloxNhAP0=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\nexport const LogoutButton = () => {\n  _s2();\n\n  const handleLogout = useLogout();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-sm btn-dark\",\n    onClick: handleLogout,\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(LogoutButton, \"8pUC1aarjKHLibLtGE3MSJKqh4E=\", false, function () {\n  return [useLogout];\n});\n\n_c = LogoutButton;\nexport default LogoutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogoutButton\");","map":{"version":3,"names":["useAuth","useNavigate","React","useState","useEffect","useLogout","navigate","logout","csrfToken","setCsrfToken","fetchCsrfToken","response","fetch","method","credentials","ok","data","json","console","error","handleLogout","headers","LogoutButton"],"sources":["/app/src/Accounts/AccountLogOut.js"],"sourcesContent":["import { useAuth } from '../Auth/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\n\nexport const useLogout = () => {\n    const navigate = useNavigate();\n    const { logout } = useAuth();\n    const [csrfToken, setCsrfToken] = useState('');\n\n\n    useEffect(() => {\n    const fetchCsrfToken = async () => {\n        try {\n        const response = await fetch('http://localhost:8070/api/csrf-token/', {\n            method: 'GET',\n            credentials: 'include',\n        });\n\n        if (response.ok) {\n            const data = await response.json();\n            setCsrfToken(data.csrfToken);\n        } else {\n            console.error('Failed to fetch CSRF token.');\n        }\n        } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n        }\n    };\n\n    fetchCsrfToken();\n    }, []);\n\n\n    const handleLogout = async () => {\n        try {\n            const response = await fetch('http://localhost:8070/api/account/logout/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': csrfToken,\n                },\n                credentials: 'include',\n            });\n\n            if (response.ok) {\n                logout();\n                navigate('/');\n            } else {\n                console.error('Logout failed');\n            }\n        } catch (error) {\n            console.error('An error occurred while trying to log out:', error);\n        }\n    };\n    return handleLogout;\n};\n\n    export const LogoutButton = () => {\n        const handleLogout = useLogout();\n        return (\n            <button className=\"btn btn-sm btn-dark\" onClick={handleLogout}>\n                Logout\n            </button>\n        );\n    };\n\n    export default LogoutButton;\n"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC3B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAM;IAAEM;EAAF,IAAaP,OAAO,EAA1B;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EAGAC,SAAS,CAAC,MAAM;IAChB,MAAMM,cAAc,GAAG,YAAY;MAC/B,IAAI;QACJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;UAClEC,MAAM,EAAE,KAD0D;UAElEC,WAAW,EAAE;QAFqD,CAA1C,CAA5B;;QAKA,IAAIH,QAAQ,CAACI,EAAb,EAAiB;UACb,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;UACAR,YAAY,CAACO,IAAI,CAACR,SAAN,CAAZ;QACH,CAHD,MAGO;UACHU,OAAO,CAACC,KAAR,CAAc,6BAAd;QACH;MACA,CAZD,CAYE,OAAOA,KAAP,EAAc;QAChBD,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;MACC;IACJ,CAhBD;;IAkBAT,cAAc;EACb,CApBQ,EAoBN,EApBM,CAAT;;EAuBA,MAAMU,YAAY,GAAG,YAAY;IAC7B,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAA8C;QACtEC,MAAM,EAAE,MAD8D;QAEtEQ,OAAO,EAAE;UACL,gBAAgB,kBADX;UAEL,eAAeb;QAFV,CAF6D;QAMtEM,WAAW,EAAE;MANyD,CAA9C,CAA5B;;MASA,IAAIH,QAAQ,CAACI,EAAb,EAAiB;QACbR,MAAM;QACND,QAAQ,CAAC,GAAD,CAAR;MACH,CAHD,MAGO;QACHY,OAAO,CAACC,KAAR,CAAc,eAAd;MACH;IACJ,CAhBD,CAgBE,OAAOA,KAAP,EAAc;MACZD,OAAO,CAACC,KAAR,CAAc,4CAAd,EAA4DA,KAA5D;IACH;EACJ,CApBD;;EAqBA,OAAOC,YAAP;AACH,CAnDM;;GAAMf,S;UACQJ,W,EACED,O;;;AAmDnB,OAAO,MAAMsB,YAAY,GAAG,MAAM;EAAA;;EAC9B,MAAMF,YAAY,GAAGf,SAAS,EAA9B;EACA,oBACI;IAAQ,SAAS,EAAC,qBAAlB;IAAwC,OAAO,EAAEe,YAAjD;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAPM;;IAAME,Y;UACYjB,S;;;KADZiB,Y;AASb,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}