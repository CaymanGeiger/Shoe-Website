{"ast":null,"code":"var _jsxFileName = \"/app/src/Auth/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  console.log(userId);\n\n  const checkAuthStatus = async () => {\n    try {\n      const response = await fetch('http://localhost:8070/api/check-auth-status', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      const data = await response.json();\n      setIsAuthenticated(data.isAuthenticated);\n      setUserId(data.id);\n    } catch (error) {\n      console.error('Failed to check auth status:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = async () => {\n    await checkAuthStatus();\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUserId(null);\n  };\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const value = {\n    isAuthenticated,\n    userId,\n    login,\n    logout,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"NrPeXIKvCRnuK+k7KYmALLpJbeI=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AuthContext","useAuth","AuthProvider","children","isAuthenticated","setIsAuthenticated","userId","setUserId","isLoading","setIsLoading","console","log","checkAuthStatus","response","fetch","method","credentials","data","json","id","error","login","logout","value"],"sources":["/app/src/Auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [userId, setUserId] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    console.log(userId)\n    const checkAuthStatus = async () => {\n        try {\n            const response = await fetch('http://localhost:8070/api/check-auth-status', {\n                method: 'GET',\n                credentials: 'include',\n            });\n            const data = await response.json();\n            setIsAuthenticated(data.isAuthenticated);\n            setUserId(data.id);\n        } catch (error) {\n            console.error('Failed to check auth status:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const login = async () => {\n        await checkAuthStatus();\n        setIsAuthenticated(true);\n    };\n\n    const logout = () => {\n        setIsAuthenticated(false);\n        setUserId(null);\n    };\n\n    useEffect(() => {\n        checkAuthStatus();\n    }, []);\n\n    const value = {\n        isAuthenticated,\n        userId,\n        login,\n        logout,\n        isLoading,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,QAAsE,OAAtE;;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEA,OAAO,MAAMK,OAAO,GAAG,MAAM;EAAA;;EACzB,OAAOJ,UAAU,CAACG,WAAD,CAAjB;AACH,CAFM;;GAAMC,O;;AAIb,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC1C,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;EACAY,OAAO,CAACC,GAAR,CAAYL,MAAZ;;EACA,MAAMM,eAAe,GAAG,YAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,EAAgD;QACxEC,MAAM,EAAE,KADgE;QAExEC,WAAW,EAAE;MAF2D,CAAhD,CAA5B;MAIA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MACAb,kBAAkB,CAACY,IAAI,CAACb,eAAN,CAAlB;MACAG,SAAS,CAACU,IAAI,CAACE,EAAN,CAAT;IACH,CARD,CAQE,OAAOC,KAAP,EAAc;MACZV,OAAO,CAACU,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;IACH,CAVD,SAUU;MACNX,YAAY,CAAC,KAAD,CAAZ;IACH;EACJ,CAdD;;EAgBA,MAAMY,KAAK,GAAG,YAAY;IACtB,MAAMT,eAAe,EAArB;IACAP,kBAAkB,CAAC,IAAD,CAAlB;EACH,CAHD;;EAKA,MAAMiB,MAAM,GAAG,MAAM;IACjBjB,kBAAkB,CAAC,KAAD,CAAlB;IACAE,SAAS,CAAC,IAAD,CAAT;EACH,CAHD;;EAKAR,SAAS,CAAC,MAAM;IACZa,eAAe;EAClB,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAMW,KAAK,GAAG;IACVnB,eADU;IAEVE,MAFU;IAGVe,KAHU;IAIVC,MAJU;IAKVd;EALU,CAAd;EAQA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEe,KAA7B;IAAA,UACKpB;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAhDM;;IAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}