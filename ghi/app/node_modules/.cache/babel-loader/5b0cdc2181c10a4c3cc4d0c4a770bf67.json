{"ast":null,"code":"var _jsxFileName = \"/app/src/Shoes/Reviews/Stars.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faX } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as farFaStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as fasFaStar } from '@fortawesome/free-solid-svg-icons';\nimport { faStarHalfAlt } from '@fortawesome/free-solid-svg-icons';\nimport \"../ShoePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StarRating(_ref) {\n  _s();\n\n  let {\n    shoeID,\n    forceRatingValue = null\n  } = _ref;\n  const [shoeRating, setShoeRating] = useState(forceRatingValue || null);\n  const previousShoeID = useRef(null);\n\n  async function loadRating() {\n    try {\n      const response = await fetch(`http://localhost:8080/api/shoe/${shoeID}/`);\n\n      if (!response.ok) {\n        throw new Error('Response was not ok');\n      }\n\n      const data = await response.json();\n      console.log(data);\n\n      if (data.serialized_ratings) {\n        const averageRating = data.serialized_ratings.average_rating;\n        const roundedRating = Math.round(averageRating * 2) / 2;\n\n        if (averageRating !== undefined) {\n          setShoeRating(roundedRating);\n        }\n\n        if (ratingValue === \"average\") {\n          setShoeRating(roundedRating);\n        }\n      }\n    } catch (error) {\n      console.error('Cannot get the rating:', error);\n    }\n  }\n\n  useEffect(() => {\n    if (shoeID !== previousShoeID.current && ratingValue !== null) {\n      loadRating();\n      previousShoeID.current = shoeID;\n    } else {\n      setShoeRating(null);\n    }\n  }, [shoeID, forceRatingValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products_star\",\n    children: [1, 2, 3, 4, 5].map(starNumber => {\n      let iconToUse = farFaStar;\n      const currentRating = forceRatingValue || shoeRating;\n\n      if (currentRating >= starNumber) {\n        iconToUse = fasFaStar;\n      } else if (currentRating >= starNumber - 0.5) {\n        iconToUse = faStarHalfAlt;\n      }\n\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"starIcon fa-fw\",\n        icon: iconToUse,\n        color: \"transparent\",\n        style: {\n          color: iconToUse !== farFaStar ? 'gold' : 'grey'\n        }\n      }, starNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StarRating, \"WtGIkwlm8bW7x+U4ckp+7qZp75g=\");\n\n_c = StarRating;\nexport default _c2 = /*#__PURE__*/React.memo(StarRating);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StarRating\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faX","faStar","farFaStar","fasFaStar","faStarHalfAlt","StarRating","shoeID","forceRatingValue","shoeRating","setShoeRating","previousShoeID","loadRating","response","fetch","ok","Error","data","json","console","log","serialized_ratings","averageRating","average_rating","roundedRating","Math","round","undefined","ratingValue","error","current","map","starNumber","iconToUse","currentRating","color","memo"],"sources":["/app/src/Shoes/Reviews/Stars.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  faX } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as farFaStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as fasFaStar } from '@fortawesome/free-solid-svg-icons';\nimport { faStarHalfAlt } from '@fortawesome/free-solid-svg-icons';\nimport \"../ShoePage.css\"\n\n\nfunction StarRating({ shoeID, forceRatingValue = null }) {\n    const [shoeRating, setShoeRating] = useState(forceRatingValue || null);\n    const previousShoeID = useRef(null);\n\n\n\n    async function loadRating() {\n        try {\n            const response = await fetch(`http://localhost:8080/api/shoe/${shoeID}/`);\n\n            if (!response.ok) {\n                throw new Error('Response was not ok');\n            }\n\n            const data = await response.json();\n            console.log(data)\n            if (data.serialized_ratings) {\n                const averageRating = data.serialized_ratings.average_rating;\n                const roundedRating = Math.round(averageRating * 2) / 2;\n                if (averageRating !== undefined) {\n                    setShoeRating(roundedRating);\n                }\n                if (ratingValue === \"average\"){\n                    setShoeRating(roundedRating)\n                }\n            }\n        } catch (error) {\n            console.error('Cannot get the rating:', error);\n        }\n    }\n    useEffect(() => {\n        if (shoeID !== previousShoeID.current && ratingValue !== null) {\n            loadRating();\n            previousShoeID.current = shoeID;\n        } else {\n            setShoeRating(null);\n        }\n    }, [shoeID, forceRatingValue]);\n\n\n\n\n    return (\n    <div className=\"products_star\">\n        {[1, 2, 3, 4, 5].map((starNumber) => {\n            let iconToUse = farFaStar;\n            const currentRating = forceRatingValue || shoeRating;\n            if (currentRating >= starNumber) {\n                iconToUse = fasFaStar;\n            } else if (currentRating >= starNumber - 0.5) {\n                iconToUse = faStarHalfAlt;\n            }\n            return (\n                <FontAwesomeIcon\n                    key={starNumber}\n                    className=\"starIcon fa-fw\"\n                    icon={iconToUse}\n                    color=\"transparent\"\n                    style={{ color: iconToUse !== farFaStar ? 'gold' : 'grey' }}\n                />\n            );\n        })}\n        </div>\n    );\n}\n\nexport default React.memo(StarRating);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAUC,GAAV,QAAqB,mCAArB;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,qCAApC;AACA,SAASD,MAAM,IAAIE,SAAnB,QAAoC,mCAApC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAO,iBAAP;;;AAGA,SAASC,UAAT,OAAyD;EAAA;;EAAA,IAArC;IAAEC,MAAF;IAAUC,gBAAgB,GAAG;EAA7B,CAAqC;EACrD,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAACW,gBAAgB,IAAI,IAArB,CAA5C;EACA,MAAMG,cAAc,GAAGZ,MAAM,CAAC,IAAD,CAA7B;;EAIA,eAAea,UAAf,GAA4B;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCP,MAAO,GAA1C,CAA5B;;MAEA,IAAI,CAACM,QAAQ,CAACE,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;;MACA,IAAIA,IAAI,CAACI,kBAAT,EAA6B;QACzB,MAAMC,aAAa,GAAGL,IAAI,CAACI,kBAAL,CAAwBE,cAA9C;QACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWJ,aAAa,GAAG,CAA3B,IAAgC,CAAtD;;QACA,IAAIA,aAAa,KAAKK,SAAtB,EAAiC;UAC7BjB,aAAa,CAACc,aAAD,CAAb;QACH;;QACD,IAAII,WAAW,KAAK,SAApB,EAA8B;UAC1BlB,aAAa,CAACc,aAAD,CAAb;QACH;MACJ;IACJ,CAnBD,CAmBE,OAAOK,KAAP,EAAc;MACZV,OAAO,CAACU,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;IACH;EACJ;;EACD/B,SAAS,CAAC,MAAM;IACZ,IAAIS,MAAM,KAAKI,cAAc,CAACmB,OAA1B,IAAqCF,WAAW,KAAK,IAAzD,EAA+D;MAC3DhB,UAAU;MACVD,cAAc,CAACmB,OAAf,GAAyBvB,MAAzB;IACH,CAHD,MAGO;MACHG,aAAa,CAAC,IAAD,CAAb;IACH;EACJ,CAPQ,EAON,CAACH,MAAD,EAASC,gBAAT,CAPM,CAAT;EAYA,oBACA;IAAK,SAAS,EAAC,eAAf;IAAA,UACK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgBuB,GAAhB,CAAqBC,UAAD,IAAgB;MACjC,IAAIC,SAAS,GAAG9B,SAAhB;MACA,MAAM+B,aAAa,GAAG1B,gBAAgB,IAAIC,UAA1C;;MACA,IAAIyB,aAAa,IAAIF,UAArB,EAAiC;QAC7BC,SAAS,GAAG7B,SAAZ;MACH,CAFD,MAEO,IAAI8B,aAAa,IAAIF,UAAU,GAAG,GAAlC,EAAuC;QAC1CC,SAAS,GAAG5B,aAAZ;MACH;;MACD,oBACI,QAAC,eAAD;QAEI,SAAS,EAAC,gBAFd;QAGI,IAAI,EAAE4B,SAHV;QAII,KAAK,EAAC,aAJV;QAKI,KAAK,EAAE;UAAEE,KAAK,EAAEF,SAAS,KAAK9B,SAAd,GAA0B,MAA1B,GAAmC;QAA5C;MALX,GACS6B,UADT;QAAA;QAAA;QAAA;MAAA,QADJ;IASH,CAjBA;EADL;IAAA;IAAA;IAAA;EAAA,QADA;AAsBH;;GAhEQ1B,U;;KAAAA,U;AAkET,kCAAeV,KAAK,CAACwC,IAAN,CAAW9B,UAAX,CAAf"},"metadata":{},"sourceType":"module"}