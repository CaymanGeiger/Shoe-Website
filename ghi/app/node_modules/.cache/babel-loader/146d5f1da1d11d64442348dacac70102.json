{"ast":null,"code":"var _jsxFileName = \"/app/src/Accounts/AccountLogIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./AccountForm.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccountLogIn() {\n  _s();\n\n  const {\n    login\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const [csrfToken, setCsrfToken] = useState('');\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await fetch('http://localhost:8070/api/csrf-token/', {\n          method: 'GET',\n          credentials: 'include'\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setCsrfToken(data.csrfToken);\n        } else {\n          console.error('Failed to fetch CSRF token.');\n        }\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n      }\n    };\n\n    fetchCsrfToken();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const accountUrl = 'http://localhost:8070/api/account/login/';\n    const fetchConfig = {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrfToken\n      },\n      credentials: 'include'\n    };\n\n    try {\n      const response = await fetch(accountUrl, fetchConfig);\n\n      if (response.ok) {\n        setFormData({\n          username: '',\n          password: ''\n        });\n        navigate(\"/\");\n      } else {\n        console.error('Login failed');\n      }\n    } catch (error) {\n      console.error('Error during Login:', error);\n    }\n  };\n\n  const handleFormChange = e => {\n    const value = e.target.value;\n    const inputName = e.target.name;\n    setFormData({ ...formData,\n      [inputName]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offset-3 col-5 mt-4 form1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow p-4 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mb-3 mt-0 pt-0 formHeaderContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center mb-3 formHeader\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          id: \"sign-in-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Username...\",\n              className: \"text-center form-control\",\n              onChange: handleFormChange,\n              value: formData.username,\n              required: true,\n              type: \"text\",\n              name: \"username\",\n              id: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mt-4 mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Password...\",\n              className: \"text-center form-control\",\n              onChange: handleFormChange,\n              value: formData.password,\n              required: true,\n              type: \"text\",\n              name: \"password\",\n              id: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-3 col-12\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AccountLogIn, \"3BY5oOx0OYJFdwgW/ioN54prW8A=\", true, function () {\n  return [useNavigate];\n});\n\n_c = AccountLogIn;\nexport default AccountLogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountLogIn\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","AccountLogIn","login","useAuth","formData","setFormData","username","password","navigate","csrfToken","setCsrfToken","fetchCsrfToken","response","fetch","method","credentials","ok","data","json","console","error","handleSubmit","event","preventDefault","accountUrl","fetchConfig","body","JSON","stringify","headers","handleFormChange","e","value","target","inputName","name"],"sources":["/app/src/Accounts/AccountLogIn.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./AccountForm.css\"\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction AccountLogIn() {\n    const { login } = useAuth();\n    const [formData, setFormData] = useState({\n        username: '',\n        password: '',\n    });\n    const navigate = useNavigate();\n    const [csrfToken, setCsrfToken] = useState('');\n\n    useEffect(() => {\n        const fetchCsrfToken = async () => {\n        try {\n            const response = await fetch('http://localhost:8070/api/csrf-token/', {\n                method: 'GET',\n                credentials: 'include',\n            });\n        if (response.ok) {\n            const data = await response.json();\n            setCsrfToken(data.csrfToken);\n        } else {\n            console.error('Failed to fetch CSRF token.');\n        }\n        } catch (error) {\n            console.error('Error fetching CSRF token:', error);\n        }\n        };\n\n        fetchCsrfToken();\n    }, []);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const accountUrl = 'http://localhost:8070/api/account/login/';\n        const fetchConfig = {\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken,\n            },\n            credentials: 'include',\n            }\n        try {\n            const response = await fetch(accountUrl, fetchConfig);\n\n            if (response.ok) {\n                setFormData({\n                    username: '',\n                    password: '',\n                });\n                navigate(\"/\")\n            } else {\n                console.error('Login failed');\n            }\n        } catch (error) {\n            console.error('Error during Login:', error);\n        }\n    }\n\n\n    const handleFormChange = (e) => {\n        const value = e.target.value;\n        const inputName = e.target.name;\n        setFormData({\n            ...formData,\n            [inputName]: value\n        });\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"offset-3 col-5 mt-4 form1\">\n                <div className=\"shadow p-4 mt-4\">\n                    <div className=\"col-12 mb-3 mt-0 pt-0 formHeaderContainer\" >\n                    <h1 className='text-center mb-3 formHeader'>Sign In</h1>\n                    </div>\n                    <form onSubmit={handleSubmit} id=\"sign-in-form\">\n                        <div className=\"col-12 mb-2\">\n                            <input placeholder=\"Username...\" className=\"text-center form-control\" onChange={handleFormChange} value={formData.username} required type=\"text\" name=\"username\" id=\"username\"/>\n                        </div>\n                        <div className=\"col-12 mt-4 mb-2\">\n                            <input placeholder=\"Password...\" className=\"text-center form-control\" onChange={handleFormChange} value={formData.password} required type=\"text\" name=\"password\" id=\"password\"/>\n                        </div>\n                        <button className=\"btn btn-primary mt-3 col-12\">Create</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default AccountLogIn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}