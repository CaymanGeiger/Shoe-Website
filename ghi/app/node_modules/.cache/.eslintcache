[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/Nav.js":"3","/app/src/MainPage.js":"4","/app/src/Shoes/ShoeList.js":"5","/app/src/Shoes/ShoeForm.js":"6","/app/src/Shoes/filter.js":"7","/app/src/Shoes/ShoeDetail.js":"8","/app/src/Shoes/ShoePage.js":"9","/app/src/Bins/BinForm.js":"10","/app/src/Hats/HatList.js":"11","/app/src/Accounts/AccountList.js":"12","/app/src/Accounts/AccountForm.js":"13","/app/src/Accounts/AccountLogIn.js":"14","/app/src/Accounts/AccountLogOut.js":"15","/app/src/Auth/AuthContext.js":"16","/app/src/Shoes/ShoePageFilter.js":"17","/app/src/Accounts/SignInModal.js":"18","/app/src/Shoes/Reviews/Stars.js":"19","/app/src/Shoes/Reviews/ReviewForm.js":"20","/app/src/Shoes/FavoriteList.js":"21","/app/src/ToastContext.js":"22","/app/src/Shoes/ShoeForm1.js":"23"},{"size":304,"mtime":1698196000051,"results":"24","hashOfConfig":"25"},{"size":2541,"mtime":1698725431094,"results":"26","hashOfConfig":"25"},{"size":3808,"mtime":1698733190030,"results":"27","hashOfConfig":"25"},{"size":1502,"mtime":1698785201978,"results":"28","hashOfConfig":"25"},{"size":4365,"mtime":1698356454737,"results":"29","hashOfConfig":"25"},{"size":6952,"mtime":1698724941336,"results":"30","hashOfConfig":"25"},{"size":3056,"mtime":1698156045214,"results":"31","hashOfConfig":"25"},{"size":6745,"mtime":1698733828417,"results":"32","hashOfConfig":"25"},{"size":9299,"mtime":1698785201979,"results":"33","hashOfConfig":"25"},{"size":2740,"mtime":1698260702456,"results":"34","hashOfConfig":"25"},{"size":1664,"mtime":1698263102101,"results":"35","hashOfConfig":"25"},{"size":1138,"mtime":1698177314985,"results":"36","hashOfConfig":"25"},{"size":5198,"mtime":1698475932801,"results":"37","hashOfConfig":"25"},{"size":4748,"mtime":1698733576138,"results":"38","hashOfConfig":"25"},{"size":1860,"mtime":1698423023176,"results":"39","hashOfConfig":"25"},{"size":1627,"mtime":1698715684938,"results":"40","hashOfConfig":"25"},{"size":3796,"mtime":1698369847172,"results":"41","hashOfConfig":"25"},{"size":983,"mtime":1698715161952,"results":"42","hashOfConfig":"25"},{"size":2683,"mtime":1698688516753,"results":"43","hashOfConfig":"25"},{"size":6134,"mtime":1698733853582,"results":"44","hashOfConfig":"25"},{"size":6121,"mtime":1698707358657,"results":"45","hashOfConfig":"25"},{"size":1089,"mtime":1698724309928,"results":"46","hashOfConfig":"25"},{"size":6161,"mtime":1698785201978,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1wlnt94",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"51"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],[],[],"/app/src/App.js",[],[],"/app/src/Nav.js",["124","125","126"],[],"/app/src/MainPage.js",["127"],[],"/app/src/Shoes/ShoeList.js",["128","129"],[],"import {useState, useEffect} from 'react';\nimport { BrandsArrowToggleButton, StoresArrowToggleButton, PricesArrowToggleButton, ColorsArrowToggleButton, CategoriesArrowToggleButton, NamesArrowToggleButton } from './filter';\nimport { Link } from \"react-router-dom\"\n\n\nfunction ShoeList() {\n    const [shoes, setShoes] = useState([]);\n    const [bins, setBins] = useState([]);\n    const [bin, setBin] = useState(\"\");\n    // const [filteredList, setFilteredList] = useState([]);\n    const [nameIsUp, setNameIsUp] = useState(false);\n\n    async function loadShoes() {\n        const response = await fetch('http://localhost:8080/api/shoes/');\n        const data = await response.json();\n        setShoes(data.shoes);\n    }\n\n\n    async function loadBins(){\n        const response = await fetch (\"http://localhost:8100/api/bins/\");\n        const data = await response.json();\n        setBins(data.bins)\n    }\n    useEffect(() => {\n        loadShoes();\n        loadBins();\n    }, []);\n\n\n    async function filterShoes() {\n        if (bin !== \"\"){\n            const pk = bin\n            const response = await fetch(`http://localhost:8080/api/bin/${pk}/shoes/`);\n            const data = await response.json();\n            setShoes(data.shoes);\n        }\n    }\n\n\n    function handleBinChange(e){\n        setBin(e.target.value)\n    }\n    useEffect(() => {\n        filterShoes();\n    }, [bin]);\n\n\n    function handleAllShoesClick(){\n        loadShoes();\n    }\n\n\n    async function handleOnDelete(e) {\n        const pk = e.target.id\n        const request = await fetch (`http://localhost:8080/api/shoe/${pk}/`, {\n            method: \"DELETE\"\n        });\n        const resp = await request.json()\n        if (resp.deleted){\n            alert(\"Was Deleted\")\n            loadShoes()\n        } else {\n            alert(\"Not Deleted!\")\n        }\n    }\n\n\n    // function onToggleNameDirection(){\n\n    // }\n\n    // function onToggleBrandDirection(){\n\n    // }\n\n    const sortedList = shoes.sort((shoeA, shoeB) => {\n        if (nameIsUp === true) {\n            return shoeA.name.localeCompare(shoeB.name);\n        } else if (nameIsUp === false){\n            return shoeB.name.localeCompare(shoeA.name);}\n    });\n\nreturn (\n    <div className=\"mainDiv mt-3\">\n    <div style={{display: \"flex\", justifyContent: \"center\" }}>\n    <select className=\"btn-secondary\" style={{width: \"20vw\", backgroundColor: \"black\"}} value={bin} onChange={handleBinChange} required name=\"bin\" id=\"bin\">\n        <option style={{textAlign: \"center\"}} value=\"up\">Choose a store</option>\n        {bins.map(bin => {\n            return (\n            <option key={bin.id} value={bin.id} >\n            {bin.closet_name}\n            </option>\n            );\n        })}\n    </select>\n    </div>\n    <div className='mt-3'>\n    <table className=\"table table-hover listTable\">\n        <thead className='mt-5'>\n        <tr className=\"listTr\">\n            <th className=''>Names <NamesArrowToggleButton onToggleNameDirection={setNameIsUp}/></th>\n            <th>Brands <BrandsArrowToggleButton/></th>\n            <th>Categories<CategoriesArrowToggleButton/></th>\n            <th>Prices<PricesArrowToggleButton/></th>\n            <th>Sizes<ColorsArrowToggleButton/></th>\n            <th>Colors<ColorsArrowToggleButton/></th>\n            <th>Stores<StoresArrowToggleButton/></th>\n            <th>Sku's<StoresArrowToggleButton/></th>\n\n            <th>Remove</th>\n        </tr>\n        </thead>\n        <tbody>\n        {sortedList.map(shoe => {\n            return (\n            <tr key={shoe.id}>\n                <td><Link to={`/shoes/${shoe.id}`}>{ shoe.name }</Link></td>\n                <td>{ shoe.brand }</td>\n                <td>{ shoe.category }</td>\n                <td> ${ shoe.price }</td>\n                <td>{ shoe.size }</td>\n                <td>{ shoe.color }</td>\n                <td>{ shoe.bin.name }</td>\n                <td>{ shoe.sku }</td>\n                <td><button onClick={handleOnDelete} id={shoe.id}className=\"btn btn-danger btn-sm\">Delete</button></td>\n\n            </tr>\n            );\n        })}\n        </tbody>\n    </table>\n</div>\n<div style={{display: \"flex\", justifyContent: \"center\"}}>\n<button className=\"btn-secondary\" style={{width: \"15vw\", fontSize: \"1em\", overflow: \"hidden\", backgroundColor: \"black\"}}onClick={handleAllShoesClick}>Refresh</button>\n</div>\n\n</div>\n);\n}\nexport default ShoeList;\n","/app/src/Shoes/ShoeForm.js",[],[],"/app/src/Shoes/filter.js",[],[],"/app/src/Shoes/ShoeDetail.js",["130","131","132","133","134"],[],"import {useState, useEffect} from 'react';\nimport \"./ShoeDetail.css\"\nimport { useParams } from 'react-router-dom';\nimport StarRating from \"./Reviews/Stars\"\nimport SubmitStarRating from \"./Reviews/ReviewForm\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nfunction ShoeDetail() {\n    const [shoe, setShoe] = useState({});\n    const [activeTab, setActiveTab] = useState('details');\n    const [showReviewModel, setShowReviewModel] = useState(false);\n    const [showCreateReviewModel, setShowCreateReviewModel] = useState(false);\n\n    const { id } = useParams();\n\n    const handleTouchMove = (event) => {\n        // Convert website to mobile using these after features are done\n    };\n\n    useEffect(() => {\n        document.addEventListener('touchmove', handleTouchMove, { passive: true });\n\n        async function loadShoe() {\n            const response = await fetch(`http://localhost:8080/api/shoe/${id}/`);\n            const data = await response.json();\n            setShoe(data);\n        }\n\n        loadShoe();\n        return () => {\n            document.removeEventListener('touchmove', handleTouchMove);\n        };\n    }, []);\n\n\n    const randomNumber = Math.floor(Math.random() * 9) + 1;\n\n\n\n\n    const handleTabClick = (tabName) => {\n        setActiveTab(tabName);\n    };\n\n\n    const handleAllReviewsClick = () => {\n        setShowReviewModel(!showReviewModel)\n    };\n\n    const handleCreateReviewClick = () => {\n        setShowCreateReviewModel(!showCreateReviewModel)\n    };\n\nreturn (\n    <div className='detailMainDiv'>\n    <div className='product'>\n        <div className='boxesDiv'>\n            <div className='col-md-10 col-sm-12 card'>\n                <div className=\"imgContainer\">\n                    <div className='image1Div'>\n                    <img className=\"image1 img-fluid\" src={`/images/img${randomNumber}.png`}/>\n                    </div>\n                </div>\n            </div>\n            <div className='card2'>\n                <div className='shoeInfo'>\n                    <div className='nameDiv'>\n                    <h5 className='name'>{shoe.name}</h5>\n                    </div>\n                <hr></hr>\n                <div>\n                    <div>\n                        <h5>Brand</h5>\n                        <p className='tableData'>{shoe.brand}</p>\n                        <hr></hr>\n                    </div>\n                    <div>\n                        <h5>Category</h5>\n                        <p className='tableData'>{shoe.category}</p>\n                        <hr></hr>\n                    </div>\n                    <div>\n                        <h5>Price</h5>\n                        <p className='tableData'>{shoe.price}</p>\n                        <hr></hr>\n                    </div>\n                    <div>\n                        <h5>Size</h5>\n                        <p className='tableData'>{shoe.size}</p>\n                        <hr></hr>\n                    </div>\n                    <div>\n                        <h5>Color</h5>\n                        <p className='tableData'>{shoe.color}</p>\n                        <hr></hr>\n                    </div>\n                    <div>\n                        <h5>Sku</h5>\n                        <p className='tableData'>{shoe.sku}</p>\n                        <hr></hr>\n                    </div>\n                    <div>\n                        <h5>Gender</h5>\n                        <p className='tableData'>{shoe.gender}</p>\n                    </div>\n                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n        <div className=\"tab-section\">\n            <ul className=\"tab-list\">\n                <li className={`tab-item ${activeTab === 'details' ? 'active' : ''}`} onClick={() => handleTabClick('details')}>Details</li>\n                <li className={`tab-item ${activeTab === 'reviews' ? 'active' : ''}`} onClick={() => handleTabClick('reviews')}>Reviews</li>\n            </ul>\n            <div className=\"tab-content\">\n                <div style={{ display: activeTab === 'details' ? 'block' : 'none' }}>\n                    <p>{shoe.description}</p>\n                </div>\n                <div style={{ display: activeTab === 'reviews' ? 'block' : 'none' }}>\n                    <div className='averageNameAndReview'>\n                            <h4>{shoe.name}</h4>\n                            <StarRating shoeID={shoe.id} isClickable={false} ratingValue={\"average\"}/>\n                    </div>\n                    <div className='newReviewDiv'>\n                        <SubmitStarRating shoeID={shoe.id}/>\n                    </div>\n                    <div className='shoeAllReviews'>\n                        <div className='averageNameAndReview'>\n                            <button onClick={handleAllReviewsClick}className='averageReviewAllButton'>\n                                All Reviews\n                                {showReviewModel ? (\n                                    <span style={{ color: 'black', fontSize: \"13px\", marginLeft: \"5px\" }}>&#9650;</span>\n                                    ) : (\n                                    <span style={{ color: 'black', fontSize: \"13px\", marginLeft: \"5px\" }}>&#9660;</span>\n                                    )}\n                            </button>\n                        </div>\n                    </div>\n                    <div className='reviewsShoeDiv'>\n                        {showReviewModel && (\n                            shoe.serialized_ratings && shoe.serialized_ratings.ratings && shoe.serialized_ratings.ratings.length > 0 ? (\n                                shoe.serialized_ratings.ratings.map((rating, index) => (\n                                    <div key={index} className='reviewsShoe'>\n                                        <div className='reviewsShoeNameDiv'>\n                                            <h6 className='reviewsShoeName'>{rating.account}</h6>\n                                        </div>\n                                        <StarRating shoeID={shoe.id} forceRatingValue={parseFloat(rating.rating)}  />\n                                        <div className='reviewsShoeDescriptionDiv'>\n                                            <p className='reviewsShoeDescription'>{rating.rating_description}</p>\n                                        </div>\n                                    </div>\n                                ))\n                            ) : (\n                                <p>No reviews available.</p>\n                            )\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n}\nexport default ShoeDetail;\n",[],"/app/src/Shoes/ShoePage.js",["135","136","137","138"],[],"/app/src/Bins/BinForm.js",[],[],"/app/src/Hats/HatList.js",[],[],"/app/src/Accounts/AccountList.js",[],[],"/app/src/Accounts/AccountForm.js",["139"],[],"import React, { useState, useEffect } from 'react';\nimport \"./AccountForm.css\"\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../Auth/AuthContext';\nimport { useModal } from './SignInModal';\n\n\nfunction AccountForm() {\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\n    const [formData, setFormData] = useState({\n        username: '',\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n    });\n    const navigate = useNavigate();\n\n    const { login } = useAuth();\n    const [csrfToken, setCsrfToken] = useState('');\n    const { closeModal } = useModal();\n\n    useEffect(() => {\n        const fetchCsrfToken = async () => {\n        try {\n            const response = await fetch('http://localhost:8070/api/csrf-token/', {\n                method: 'GET',\n                credentials: 'include',\n            });\n        if (response.ok) {\n            const data = await response.json();\n            setCsrfToken(data.csrfToken);\n        } else {\n            console.error('Failed to fetch CSRF token.');\n        }\n        } catch (error) {\n            console.error('Error fetching CSRF token:', error);\n        }\n        };\n\n        fetchCsrfToken();\n    }, []);\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const accountUrl = 'http://localhost:8070/api/accounts/';\n        const fetchConfig = {\n            method: \"post\",\n            body: JSON.stringify(formData),\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken,\n            },\n            credentials: 'include',\n            }\n\n        if (formData.password === passwordConfirm){\n            const response = await fetch(accountUrl, fetchConfig);\n                if (response.ok) {\n                    login()\n                    setFormData({\n                        username: '',\n                        first_name: '',\n                        last_name: '',\n                        email: '',\n                        password: '',\n                    });\n                    setPasswordConfirm('')\n                    navigate(\"/\")\n                }\n        } else {\n            alert(\"Passwords Do Not Match\")\n        }\n\n    }\n\n    const handlePasswordConfirmChange = (e) => {\n        setPasswordConfirm(e.target.value);\n    }\n\n    const handleFormChange = (e) => {\n        const value = e.target.value;\n        const inputName = e.target.name;\n        setFormData({\n            ...formData,\n            [inputName]: value\n        });\n    }\n\n    return (\n            <div className=\"mt-4 p-4 mainDivSignIn\" >\n                <div className=\"shadow p-5 mt-2 form2\">\n                    <form onSubmit={handleSubmit} id=\"create-account-form\">\n                        <div className=\"mb-3 mt-0 pt-0 formHeaderContainer\" >\n                            <h1 className='text-center mb-3 formHeader'>Create an Account With Us</h1>\n                        </div>\n                        <div className=\"row\" >\n                        <div className=\"col-12 mb-2\">\n                            <input placeholder=\"Username...\" className=\"text-center form-control\" onChange={handleFormChange} value={formData.username} required type=\"text\" name=\"username\" id=\"username\"/>\n                        </div>\n                        <div className=\"col-6 mt-4 mb-2 inputField1\">\n                            <input placeholder=\"First Name...\" className=\"text-center form-control\" onChange={handleFormChange} value={formData.first_name} required type=\"text\" name=\"first_name\" id=\"first_name\"/>\n                        </div>\n                        <div className=\"col-6 mt-4 mb-2 inputField2\">\n                            <input placeholder=\"Last Name...\" className=\"text-center form-control\" onChange={handleFormChange} value={formData.last_name} required type=\"text\" name=\"last_name\" id=\"last_name\"/>\n                        </div>\n                        <div className=\"col-12 mt-4 mb-2\">\n                            <input placeholder=\"Email...\" className=\"text-center form-control\" onChange={handleFormChange} value={formData.email} required type=\"text\" name=\"email\" id=\"email\"/>\n                        </div>\n                        <div className=\"col-6 mt-4 inputField1\">\n                            <input placeholder=\"Password...\" className=\"text-center form-control\" onChange={handleFormChange} value={formData.password} required type=\"text\" name=\"password\" id=\"password\"/>\n                        </div>\n                        <div className=\"col-6 mt-4 mb-2 inputField2\">\n                            <input placeholder=\"Password Confirmation...\" className=\"text-center form-control\" onChange={handlePasswordConfirmChange} value={passwordConfirm} required type=\"text\" name=\"passwordConfirm\" id=\"passwordConfirm\"/>\n                        </div>\n                        <div className=\"col\">\n                        <button className=\"btn col-12 btn-primary mt-4 createButton\">Create</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n    );\n}\nexport default AccountForm;\n","/app/src/Accounts/AccountLogIn.js",["140","141"],[],"/app/src/Accounts/AccountLogOut.js",[],[],"/app/src/Auth/AuthContext.js",[],[],"/app/src/Shoes/ShoePageFilter.js",[],[],"/app/src/Accounts/SignInModal.js",[],[],"/app/src/Shoes/Reviews/Stars.js",["142","143","144","145"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar as farFaStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as fasFaStar } from '@fortawesome/free-solid-svg-icons';\nimport { faStarHalfAlt } from '@fortawesome/free-solid-svg-icons';\nimport \"../ShoePage.css\"\n\n\nfunction StarRating({  starStyle = {}, shoeID, ratingValue = null, forceRatingValue = null }) {\n    const [shoeRating, setShoeRating] = useState(ratingValue || null);\n    const [shoeRatingAverage, setShoeRatingAverage] = useState(null);\n    console.log(shoeID)\n\n    async function loadRating() {\n        try {\n            const response = await fetch(`http://localhost:8080/api/shoe/${shoeID}/`);\n\n            if (!response.ok) {\n                throw new Error('Response was not ok');\n            }\n\n            const data = await response.json();\n\n            if (data.serialized_ratings) {\n                const averageRating = data.serialized_ratings.average_rating;\n                const roundedRating = Math.round(averageRating * 2) / 2;\n                if (averageRating !== undefined) {\n                    setShoeRating(roundedRating);\n                }\n                if (ratingValue === \"average\"){\n                    setShoeRating(roundedRating)\n                    setShoeRatingAverage(roundedRating)\n                }\n            }\n        } catch (error) {\n            console.error('Cannot get the rating:', error);\n        }\n    }\n    useEffect(() => {\n        if (shoeID && ratingValue !== null) {\n            loadRating();\n\n        } else {\n            setShoeRating(null);\n        }\n    }, [shoeID, ratingValue]);\n\n\n    return (\n    <div className=\"products_star\">\n        {[1, 2, 3, 4, 5].map((starNumber) => {\n            let iconToUse = farFaStar;\n            const currentRating = forceRatingValue || shoeRating;\n            if (currentRating >= starNumber) {\n                iconToUse = fasFaStar;\n            } else if (currentRating >= starNumber - 0.5) {\n                iconToUse = faStarHalfAlt;\n            }\n            return (\n                <FontAwesomeIcon\n                    key={starNumber}\n                    className=\"starIcon fa-fw\"\n                    icon={iconToUse}\n                    color=\"transparent\"\n                    style={{\n                        color: iconToUse !== farFaStar ? 'gold' : 'grey',\n                        ...starStyle\n                    }}\n                />\n            );\n        })}\n            {ratingValue === \"average\" && (\n                <h6></h6>\n            )}\n        </div>\n    );\n}\n\nexport default React.memo(StarRating);\n","/app/src/Shoes/Reviews/ReviewForm.js",["146","147"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  faX } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as farFaStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as fasFaStar } from '@fortawesome/free-solid-svg-icons';\nimport { faStarHalfAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../Auth/AuthContext';\nimport \"../ShoePage.css\"\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useToast } from '../../ToastContext';\n\n\n\nfunction SubmitStarRating({ shoeID, onSuccess }) {\n    const [hoveredStar, setHoveredStar] = useState(null);\n    const [selectedStar, setSelectedStar] = useState(null);\n    const [showModel, setShowModel] = useState(false);\n    const { userId } = useAuth();\n    const showToast = useToast();\n\n\n    const [formData, setFormData] = useState({\n        rating: '',\n        rating_description: '',\n    });\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (userId) {\n        const ratingUrl = `http://localhost:8080/api/ratings/${shoeID}/${userId}/`;\n        const fetchConfig = {\n            method: \"POST\",\n            body: JSON.stringify(formData),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            }\n        try {\n            const response = await fetch(ratingUrl, fetchConfig);\n\n            if (response.ok) {\n                showToast(\"Thanks For Your Review!\", \"success\");\n                setFormData({\n                    rating: '',\n                    rating_description: '',\n                });\n                setShowModel(false)\n            } else {\n                console.error('Rating failed');\n            }\n        } catch (error) {\n            console.error('Error during rating:', error);\n        }\n        } else {\n            alert(\"You Must Be Signed In\")\n        }\n    }\n\n    const handleFormChange = (e) => {\n        const value = e.target.value;\n        const inputName = e.target.name;\n        setFormData({\n            ...formData,\n            rating: selectedStar,\n            [inputName]: value\n        });\n    }\n\n\n\n    const handleCreateReviewClick = () => {\n        setShowModel(true)\n    };\n\n    const handleCloseClick = () => {\n        setShowModel(false)\n    };\n\n    const handleStarClick = (e, starNumber) => {\n        e.preventDefault();\n        const starElement = e.currentTarget.getBoundingClientRect();\n        const starHalfWidth = starElement.width / 2;\n        const clickPosition = e.clientX - starElement.left;\n\n        if (clickPosition < starHalfWidth) {\n            setSelectedStar(starNumber - 0.5);\n        } else {\n            setSelectedStar(starNumber);\n        }\n    };\n\n\n    const handleStarMouseMove = (e, starNumber) => {\n        const starElement = e.currentTarget.getBoundingClientRect();\n        const starHalfWidth = starElement.width / 2;\n        const hoverPosition = e.clientX - starElement.left;\n\n        if (hoverPosition < starHalfWidth) {\n            setHoveredStar(starNumber - 0.5);\n        } else {\n            setHoveredStar(starNumber);\n        }\n    };\n\n\n\n    return (\n    <div className=\"products_star\">\n        <div className='newReviewDivForm'>\n            <button className='newReviewForm' onClick={handleCreateReviewClick}>Write a Review</button>\n        </div>\n                {showModel && <div className=\"overlay\"></div>}\n                <div className={showModel ? \"ratingModel show\" : \"ratingModel\"}>\n                    <div className='topSection'>\n                        <div className='modelWindowXAndRate'>\n                            <div className='rateStarsDiv'>\n                                <h2 className='rateStars'>Rate {selectedStar} stars </h2>\n                            </div>\n                            <div className='exitButtonDiv'>\n                                <button onClick={handleCloseClick} className='exitButton'><FontAwesomeIcon size=\"1x\"icon={faX} /></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                    {[1, 2, 3, 4, 5].map((starNumber) => {\n                        let iconToUse = farFaStar;\n                        const currentRating = hoveredStar\n                        if (currentRating >= starNumber) {\n                            iconToUse = fasFaStar;\n                        } else if (currentRating >= starNumber - 0.5) {\n                            iconToUse = faStarHalfAlt;\n                        }\n                        return (\n                            <FontAwesomeIcon\n                                key={starNumber}\n                                className=\"starIcon1 fa-fw\"\n                                icon={iconToUse}\n                                onMouseMove={(e) => handleStarMouseMove(e, starNumber)}\n                                onMouseLeave={() => setHoveredStar(selectedStar)}\n                                onClick={(e) => handleStarClick(e, starNumber)}\n                                color=\"transparent\"\n                                style={{ color: iconToUse !== farFaStar ? 'gold' : 'grey' }}\n                            />\n                        );\n                    })}\n                    </div>\n                    <form onSubmit={handleSubmit} id=\"sign-in-form\">\n                    <div className='ratingContent'>\n                        <div className='ratingDescDiv'>\n                            <textarea className='ratingDesc form-control' placeholder=\"Describe your rating...\" onChange={handleFormChange} value={formData.rating_description} required type=\"text\" name=\"rating_description\" id=\"rating_description\"></textarea>\n                        </div>\n                        <div className='submitRatingDiv'>\n                            <button className=\"submitRating\" onClick={handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n        </div>\n    );\n}\n\nexport default React.memo(SubmitStarRating);\n","/app/src/Shoes/FavoriteList.js",["148","149","150","151","152"],[],"/app/src/ToastContext.js",[],[],"/app/src/Shoes/ShoeForm1.js",[],[],{"ruleId":"153","severity":1,"message":"154","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":22},{"ruleId":"153","severity":1,"message":"157","line":10,"column":10,"nodeType":"155","messageId":"156","endLine":10,"endColumn":16},{"ruleId":"153","severity":1,"message":"158","line":17,"column":11,"nodeType":"155","messageId":"156","endLine":17,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":31,"column":7,"nodeType":"161","endLine":31,"endColumn":65},{"ruleId":"162","severity":1,"message":"163","line":46,"column":8,"nodeType":"164","endLine":46,"endColumn":13,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":77,"column":50,"nodeType":"168","messageId":"169","endLine":77,"endColumn":52},{"ruleId":"153","severity":1,"message":"170","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":24},{"ruleId":"153","severity":1,"message":"171","line":6,"column":26,"nodeType":"155","messageId":"156","endLine":6,"endColumn":31},{"ruleId":"162","severity":1,"message":"172","line":36,"column":8,"nodeType":"164","endLine":36,"endColumn":10,"suggestions":"173"},{"ruleId":"153","severity":1,"message":"174","line":53,"column":11,"nodeType":"155","messageId":"156","endLine":53,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":64,"column":21,"nodeType":"161","endLine":64,"endColumn":95},{"ruleId":"153","severity":1,"message":"157","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":16},{"ruleId":"153","severity":1,"message":"175","line":19,"column":12,"nodeType":"155","messageId":"156","endLine":19,"endColumn":25},{"ruleId":"162","severity":1,"message":"176","line":55,"column":8,"nodeType":"164","endLine":55,"endColumn":10,"suggestions":"177"},{"ruleId":"159","severity":1,"message":"160","line":214,"column":29,"nodeType":"161","endLine":214,"endColumn":99},{"ruleId":"153","severity":1,"message":"178","line":21,"column":13,"nodeType":"155","messageId":"156","endLine":21,"endColumn":23},{"ruleId":"153","severity":1,"message":"157","line":8,"column":10,"nodeType":"155","messageId":"156","endLine":8,"endColumn":16},{"ruleId":"153","severity":1,"message":"179","line":22,"column":13,"nodeType":"155","messageId":"156","endLine":22,"endColumn":26},{"ruleId":"153","severity":1,"message":"180","line":1,"column":38,"nodeType":"155","messageId":"156","endLine":1,"endColumn":44},{"ruleId":"153","severity":1,"message":"181","line":11,"column":12,"nodeType":"155","messageId":"156","endLine":11,"endColumn":29},{"ruleId":"162","severity":1,"message":"182","line":46,"column":8,"nodeType":"164","endLine":46,"endColumn":29,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":73,"column":17,"nodeType":"161","endLine":73,"endColumn":21},{"ruleId":"153","severity":1,"message":"186","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"180","line":1,"column":38,"nodeType":"155","messageId":"156","endLine":1,"endColumn":44},{"ruleId":"153","severity":1,"message":"187","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":22},{"ruleId":"153","severity":1,"message":"188","line":6,"column":24,"nodeType":"155","messageId":"156","endLine":6,"endColumn":38},{"ruleId":"153","severity":1,"message":"189","line":6,"column":40,"nodeType":"155","messageId":"156","endLine":6,"endColumn":51},{"ruleId":"162","severity":1,"message":"176","line":24,"column":8,"nodeType":"164","endLine":24,"endColumn":10,"suggestions":"190"},{"ruleId":"159","severity":1,"message":"160","line":124,"column":29,"nodeType":"161","endLine":124,"endColumn":99},"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'faStar' is defined but never used.","'handleLogout' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterShoes'. Either include it or remove the dependency array.","ArrayExpression",["191"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ToastContainer' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["192"],"'handleCreateReviewClick' is assigned a value but never used.","'filteredShoes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadFavorites'. Either include it or remove the dependency array.",["193"],"'closeModal' is assigned a value but never used.","'userFirstName' is assigned a value but never used.","'useRef' is defined but never used.","'shoeRatingAverage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadRating'. Either include it or remove the dependency array.",["194"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useEffect' is defined but never used.","'FilterBrands' is defined but never used.","'FilterCategory' is defined but never used.","'FilterPrice' is defined but never used.",["195"],{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"200","fix":"204"},"Update the dependencies array to be: [bin, filterShoes]",{"range":"205","text":"206"},"Update the dependencies array to be: [id]",{"range":"207","text":"208"},"Update the dependencies array to be: [loadFavorites]",{"range":"209","text":"210"},"Update the dependencies array to be: [shoeID, ratingValue, loadRating]",{"range":"211","text":"212"},{"range":"213","text":"210"},[1373,1378],"[bin, filterShoes]",[1187,1189],"[id]",[1890,1892],"[loadFavorites]",[1680,1701],"[shoeID, ratingValue, loadRating]",[875,877]]